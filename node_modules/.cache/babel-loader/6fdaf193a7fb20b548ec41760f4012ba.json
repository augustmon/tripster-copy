{"ast":null,"code":"import Parse from \"parse\";\nexport async function chatRoomSetup() {\n  let chatRoomObject = null;\n  try {\n    const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n    chatRoomParseQuery.containsAll(\"users\", usersArray); // existing chatroom id: \"XpdGCZsn2E\" ?\n    const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n    if (chatRoomParseQueryResult !== undefined && chatRoomParseQueryResult !== null) {\n      console.log(\"Chat Room ID:\", chatRoomParseQueryResult.id);\n      chatRoomObject = chatRoomParseQueryResult;\n    } else {\n      alert(\"CREATING NEW CHAT ROOM\");\n      chatRoomObject = new Parse.Object(\"ChatRoom\");\n      chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n      chatRoomObject.save();\n    }\n  } catch (error) {\n    console.log(\"ChatRoom Error\", error);\n    return false;\n  }\n  setChatRoom(chatRoomObject);\n}\nexport async function startLiveChat() {\n  const usersArray = [Parse.User.current(), props.selectedUser];\n  console.log(\"users array\", usersArray);\n  console.log(\"Starting live chat\");\n\n  // check if both UserName variables hold any values\n  if (Parse.User.current() === null || props.selectedUser === null || Parse.User.current() === undefined || props.selectedUser === undefined) {\n    alert(\"Please inform both sender and receiver!\");\n    return false;\n  }\n  if (chatRoom === null || chatRoom === undefined) {\n    chatRoomSetup();\n  }\n\n  // set user object ids, so live chat component is instantiated\n  console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n  return true;\n}","map":{"version":3,"names":["Parse","chatRoomSetup","chatRoomObject","chatRoomParseQuery","Query","containsAll","usersArray","chatRoomParseQueryResult","first","undefined","console","log","id","alert","Object","set","save","error","setChatRoom","startLiveChat","User","current","props","selectedUser","chatRoom","get"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/chat.js"],"sourcesContent":["import Parse from \"parse\";\n\nexport async function chatRoomSetup() {\n  let chatRoomObject = null;\n  try {\n    const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n    chatRoomParseQuery.containsAll(\"users\", usersArray); // existing chatroom id: \"XpdGCZsn2E\" ?\n    const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n    if (\n      chatRoomParseQueryResult !== undefined &&\n      chatRoomParseQueryResult !== null\n    ) {\n      console.log(\"Chat Room ID:\", chatRoomParseQueryResult.id);\n      chatRoomObject = chatRoomParseQueryResult;\n    } else {\n      alert(\"CREATING NEW CHAT ROOM\");\n      chatRoomObject = new Parse.Object(\"ChatRoom\");\n      chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n      chatRoomObject.save();\n    }\n  } catch (error) {\n    console.log(\"ChatRoom Error\", error);\n    return false;\n  }\n  setChatRoom(chatRoomObject);\n}\n\nexport async function startLiveChat() {\n  const usersArray = [Parse.User.current(), props.selectedUser];\n  console.log(\"users array\", usersArray);\n  console.log(\"Starting live chat\");\n\n  // check if both UserName variables hold any values\n  if (\n    Parse.User.current() === null ||\n    props.selectedUser === null ||\n    Parse.User.current() === undefined ||\n    props.selectedUser === undefined\n  ) {\n    alert(\"Please inform both sender and receiver!\");\n    return false;\n  }\n\n  if (chatRoom === null || chatRoom === undefined) {\n    chatRoomSetup();\n  }\n\n  // set user object ids, so live chat component is instantiated\n  console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n\n  return true;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,aAAa,GAAG;EACpC,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAI;IACF,MAAMC,kBAAkB,GAAG,IAAIH,KAAK,CAACI,KAAK,CAAC,UAAU,CAAC;IACtDD,kBAAkB,CAACE,WAAW,CAAC,OAAO,EAAEC,UAAU,CAAC,CAAC,CAAC;IACrD,MAAMC,wBAAwB,GAAG,MAAMJ,kBAAkB,CAACK,KAAK,EAAE;IACjE,IACED,wBAAwB,KAAKE,SAAS,IACtCF,wBAAwB,KAAK,IAAI,EACjC;MACAG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,wBAAwB,CAACK,EAAE,CAAC;MACzDV,cAAc,GAAGK,wBAAwB;IAC3C,CAAC,MAAM;MACLM,KAAK,CAAC,wBAAwB,CAAC;MAC/BX,cAAc,GAAG,IAAIF,KAAK,CAACc,MAAM,CAAC,UAAU,CAAC;MAC7CZ,cAAc,CAACa,GAAG,CAAC,OAAO,EAAET,UAAU,CAAC,CAAC,CAAC;MACzCJ,cAAc,CAACc,IAAI,EAAE;IACvB;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,KAAK,CAAC;IACpC,OAAO,KAAK;EACd;EACAC,WAAW,CAAChB,cAAc,CAAC;AAC7B;AAEA,OAAO,eAAeiB,aAAa,GAAG;EACpC,MAAMb,UAAU,GAAG,CAACN,KAAK,CAACoB,IAAI,CAACC,OAAO,EAAE,EAAEC,KAAK,CAACC,YAAY,CAAC;EAC7Db,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,UAAU,CAAC;EACtCI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;EAEjC;EACA,IACEX,KAAK,CAACoB,IAAI,CAACC,OAAO,EAAE,KAAK,IAAI,IAC7BC,KAAK,CAACC,YAAY,KAAK,IAAI,IAC3BvB,KAAK,CAACoB,IAAI,CAACC,OAAO,EAAE,KAAKZ,SAAS,IAClCa,KAAK,CAACC,YAAY,KAAKd,SAAS,EAChC;IACAI,KAAK,CAAC,yCAAyC,CAAC;IAChD,OAAO,KAAK;EACd;EAEA,IAAIW,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKf,SAAS,EAAE;IAC/CR,aAAa,EAAE;EACjB;;EAEA;EACAS,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,KAAK,CAACC,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC;EAEvE,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module"}