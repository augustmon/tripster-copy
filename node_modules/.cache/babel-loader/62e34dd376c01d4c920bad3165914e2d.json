{"ast":null,"code":"import Parse from \"parse/dist/parse.min.js\";\n\n// Create a new User\nexport async function createParseUser() {\n  // Creates a new Parse \"User\" object, which is created by default in your Parse app\n  let user = new Parse.User();\n  // Set the input values to the new \"User\" object\n  user.set(\"username\", \"johnny deluxe\");\n  user.set(\"email\", \"elskovspony@deluxe.dk\");\n  user.set(\"password\", \"oeresund\");\n  try {\n    // Call the save method, which returns the saved object if successful\n    user = await user.save();\n    if (user !== null) {\n      // Notify the success by getting the attributes from the \"User\" object, by using the get method (the id attribute needs to be accessed directly, though)\n      alert(`New object created with success! ObjectId: ${user.id}, ${user.get(\"username\")}, ${user.get(\"password\")}`);\n    }\n  } catch (error) {\n    alert(`Error: ${error.message}`);\n  }\n}","map":{"version":3,"names":["Parse","createParseUser","user","User","set","save","alert","id","get","error","message"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/user.js"],"sourcesContent":["import Parse from \"parse/dist/parse.min.js\";\n\n// Create a new User\nexport async function createParseUser() {\n  // Creates a new Parse \"User\" object, which is created by default in your Parse app\n  let user = new Parse.User();\n  // Set the input values to the new \"User\" object\n  user.set(\"username\", \"johnny deluxe\");\n  user.set(\"email\", \"elskovspony@deluxe.dk\");\n  user.set(\"password\", \"oeresund\");\n  try {\n    // Call the save method, which returns the saved object if successful\n    user = await user.save();\n    if (user !== null) {\n      // Notify the success by getting the attributes from the \"User\" object, by using the get method (the id attribute needs to be accessed directly, though)\n      alert(\n        `New object created with success! ObjectId: ${user.id}, ${user.get(\n          \"username\"\n        )}, ${user.get(\"password\")}`\n      );\n    }\n  } catch (error) {\n    alert(`Error: ${error.message}`);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,yBAAyB;;AAE3C;AACA,OAAO,eAAeC,eAAe,GAAG;EACtC;EACA,IAAIC,IAAI,GAAG,IAAIF,KAAK,CAACG,IAAI,EAAE;EAC3B;EACAD,IAAI,CAACE,GAAG,CAAC,UAAU,EAAE,eAAe,CAAC;EACrCF,IAAI,CAACE,GAAG,CAAC,OAAO,EAAE,uBAAuB,CAAC;EAC1CF,IAAI,CAACE,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;EAChC,IAAI;IACF;IACAF,IAAI,GAAG,MAAMA,IAAI,CAACG,IAAI,EAAE;IACxB,IAAIH,IAAI,KAAK,IAAI,EAAE;MACjB;MACAI,KAAK,CACF,8CAA6CJ,IAAI,CAACK,EAAG,KAAIL,IAAI,CAACM,GAAG,CAChE,UAAU,CACV,KAAIN,IAAI,CAACM,GAAG,CAAC,UAAU,CAAE,EAAC,CAC7B;IACH;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,KAAK,CAAE,UAASG,KAAK,CAACC,OAAQ,EAAC,CAAC;EAClC;AACF"},"metadata":{},"sourceType":"module"}