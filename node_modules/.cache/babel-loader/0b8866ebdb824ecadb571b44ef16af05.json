{"ast":null,"code":"import Parse from \"parse\";\nexport async function clearSelectedUsers() {\n  Parse.User.current().set(\"selectedUsers\", null);\n}\nexport async function checkUsersArray(usersArray) {\n  // check if both UserName variables hold any values\n  if (usersArray === undefined || usersArray.length < 2) {\n    alert(\"Please inform both sender and receiver!\");\n    return false;\n  } else {\n    console.log(\"Users are present\");\n    return true;\n  }\n}\n// DELETE THIS ^\n\nexport async function chatRoomSetup(usersArray) {\n  let chatRoomObject = null;\n  try {\n    const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n    chatRoomParseQuery.containsAll(\"users\", usersArray); // .equalTo ?\n    const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n    if (chatRoomParseQueryResult !== undefined && chatRoomParseQueryResult !== null) {\n      console.log(\"Entering Chat Room:\", chatRoomParseQueryResult.id);\n      chatRoomObject = chatRoomParseQueryResult;\n      // chatRoomObject.save();\n      return chatRoomObject;\n      //\n      //\n    } else if (usersArray.length >= 2) {\n      alert(\"CREATING NEW CHAT ROOM FOR\", usersArray);\n      chatRoomObject = new Parse.Object(\"ChatRoom\");\n      chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n      await chatRoomObject.save();\n      console.log(\"new chatroom:\", chatRoomObject.id);\n      return chatRoomObject;\n      //\n      //\n    } else {\n      console.log(\"not two users set\");\n    }\n  } catch (error) {\n    console.log(\"ChatRoom Error\", error);\n    return false;\n  }\n}","map":{"version":3,"names":["Parse","clearSelectedUsers","User","current","set","checkUsersArray","usersArray","undefined","length","alert","console","log","chatRoomSetup","chatRoomObject","chatRoomParseQuery","Query","containsAll","chatRoomParseQueryResult","first","id","Object","save","error"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/chat.js"],"sourcesContent":["import Parse from \"parse\";\n\nexport async function clearSelectedUsers() {\n  Parse.User.current().set(\"selectedUsers\", null);\n}\n\nexport async function checkUsersArray(usersArray) {\n  // check if both UserName variables hold any values\n  if (usersArray === undefined || usersArray.length < 2) {\n    alert(\"Please inform both sender and receiver!\");\n    return false;\n  } else {\n    console.log(\"Users are present\");\n    return true;\n  }\n}\n// DELETE THIS ^\n\nexport async function chatRoomSetup(usersArray) {\n  let chatRoomObject = null;\n  try {\n    const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n    chatRoomParseQuery.containsAll(\"users\", usersArray); // .equalTo ?\n    const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n    if (\n      chatRoomParseQueryResult !== undefined &&\n      chatRoomParseQueryResult !== null\n    ) {\n      console.log(\"Entering Chat Room:\", chatRoomParseQueryResult.id);\n      chatRoomObject = chatRoomParseQueryResult;\n      // chatRoomObject.save();\n      return chatRoomObject;\n      //\n      //\n    } else if (usersArray.length >= 2) {\n      alert(\"CREATING NEW CHAT ROOM FOR\", usersArray);\n      chatRoomObject = new Parse.Object(\"ChatRoom\");\n      chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n      await chatRoomObject.save();\n      console.log(\"new chatroom:\", chatRoomObject.id);\n      return chatRoomObject;\n      //\n      //\n    } else {\n      console.log(\"not two users set\");\n    }\n  } catch (error) {\n    console.log(\"ChatRoom Error\", error);\n    return false;\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,kBAAkB,GAAG;EACzCD,KAAK,CAACE,IAAI,CAACC,OAAO,EAAE,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC;AACjD;AAEA,OAAO,eAAeC,eAAe,CAACC,UAAU,EAAE;EAChD;EACA,IAAIA,UAAU,KAAKC,SAAS,IAAID,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;IACrDC,KAAK,CAAC,yCAAyC,CAAC;IAChD,OAAO,KAAK;EACd,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAO,IAAI;EACb;AACF;AACA;;AAEA,OAAO,eAAeC,aAAa,CAACN,UAAU,EAAE;EAC9C,IAAIO,cAAc,GAAG,IAAI;EACzB,IAAI;IACF,MAAMC,kBAAkB,GAAG,IAAId,KAAK,CAACe,KAAK,CAAC,UAAU,CAAC;IACtDD,kBAAkB,CAACE,WAAW,CAAC,OAAO,EAAEV,UAAU,CAAC,CAAC,CAAC;IACrD,MAAMW,wBAAwB,GAAG,MAAMH,kBAAkB,CAACI,KAAK,EAAE;IACjE,IACED,wBAAwB,KAAKV,SAAS,IACtCU,wBAAwB,KAAK,IAAI,EACjC;MACAP,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEM,wBAAwB,CAACE,EAAE,CAAC;MAC/DN,cAAc,GAAGI,wBAAwB;MACzC;MACA,OAAOJ,cAAc;MACrB;MACA;IACF,CAAC,MAAM,IAAIP,UAAU,CAACE,MAAM,IAAI,CAAC,EAAE;MACjCC,KAAK,CAAC,4BAA4B,EAAEH,UAAU,CAAC;MAC/CO,cAAc,GAAG,IAAIb,KAAK,CAACoB,MAAM,CAAC,UAAU,CAAC;MAC7CP,cAAc,CAACT,GAAG,CAAC,OAAO,EAAEE,UAAU,CAAC,CAAC,CAAC;MACzC,MAAMO,cAAc,CAACQ,IAAI,EAAE;MAC3BX,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,cAAc,CAACM,EAAE,CAAC;MAC/C,OAAON,cAAc;MACrB;MACA;IACF,CAAC,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,KAAK,CAAC;IACpC,OAAO,KAAK;EACd;AACF"},"metadata":{},"sourceType":"module"}