{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Parse from \"parse\";\nexport default function ChatList() {\n  _s();\n  let [localUsers, setLocalUsers] = useState();\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = await queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers().then(array => array.map(userobject => userobject = userobject.get(\"username\"))).catch(error => console.log(error)).then(result => result);\n  console.log(\"userPromise\", userPromise);\n\n  //   const userArray = userPromise.value;\n  //   console.log(\"User array: \", userArray);\n  //   //   console.log(\"NAMES with li\", listNames);\n  //   //   let names = [];\n  //   //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   //   console.log(\"User names array: \", names);\n  //   const listNames = userArray.map((name) => (name = \"<li>\" + name + \"</li>\"));\n  //   //   console.log(\"NAMES with li\", listNames);\n\n  //   return <ul>{listNames}</ul>;\n}\n_s(ChatList, \"dqGOoXxPoXv+b7sFKIIjD2IZAB8=\");\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useState","Parse","ChatList","localUsers","setLocalUsers","queryAllUsers","queryUsers","Query","result","find","error","console","log","userPromise","then","array","map","userobject","get","catch"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Parse from \"parse\";\n\nexport default function ChatList() {\n  let [localUsers, setLocalUsers] = useState();\n\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = await queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers()\n    .then((array) =>\n      array.map((userobject) => (userobject = userobject.get(\"username\")))\n    )\n    .catch((error) => console.log(error))\n    .then((result) => result);\n\n  console.log(\"userPromise\", userPromise);\n\n  //   const userArray = userPromise.value;\n  //   console.log(\"User array: \", userArray);\n  //   //   console.log(\"NAMES with li\", listNames);\n  //   //   let names = [];\n  //   //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   //   console.log(\"User names array: \", names);\n  //   const listNames = userArray.map((name) => (name = \"<li>\" + name + \"</li>\"));\n  //   //   console.log(\"NAMES with li\", listNames);\n\n  //   return <ul>{listNames}</ul>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,EAAE;EAE5C,eAAeK,aAAa,GAAG;IAC7B,IAAI;MACF,MAAMC,UAAU,GAAG,IAAIL,KAAK,CAACM,KAAK,CAAC,MAAM,CAAC;MAC1C,MAAMC,MAAM,GAAG,MAAMF,UAAU,CAACG,IAAI,EAAE;MACtC,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EACA,MAAMG,WAAW,GAAGR,aAAa,EAAE,CAChCS,IAAI,CAAEC,KAAK,IACVA,KAAK,CAACC,GAAG,CAAEC,UAAU,IAAMA,UAAU,GAAGA,UAAU,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC,CACrE,CACAC,KAAK,CAAET,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CACpCI,IAAI,CAAEN,MAAM,IAAKA,MAAM,CAAC;EAE3BG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,WAAW,CAAC;;EAEvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF;AAAC,GA/BuBX,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}