{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatSetup/ChatSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./../../App.css\";\nimport Parse from \"parse\";\nimport { chatRoomSetup, checkUsersArray } from \"../../api/chat\";\n\n//COMPONENTS\nimport LiveChat from \"../LiveChat/LiveChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatSetup(props) {\n  _s();\n  const [sender, setSender] = useState(Parse.User.current());\n  const [chatRoom, setChatRoom] = useState(null);\n  const [usersArray, setUsersArray] = useState(props.chatUsers);\n  // const usersArray = props.chatUsers;\n  console.log(props.chatUsers);\n  useEffect(() => {\n    console.log(\"props chatusers\", props.chatUsers);\n    if (props.chatUsers.length >= 2) {\n      const selectedUsers = new Parse.Object(\"ChatUsers\");\n      selectedUsers.set(\"selectedUsers\", props.chatUsers);\n      selectedUsers.save();\n    }\n    async function getSelectedUsers() {\n      const selectedUsersQuery = new Parse.Query(\"ChatUsers\");\n      selectedUsersQuery.descending(\"createdAt\");\n      const selectedUsersQueryResult = await selectedUsersQuery.first();\n      const selectedUsersColumn = selectedUsersQueryResult.get(\"selectedUsers\");\n      setUsersArray(selectedUsersColumn);\n    }\n    getSelectedUsers();\n    setUsersArray();\n    checkUsersArray(usersArray);\n\n    //\n    if (chatRoom === null || chatRoom === undefined) {\n      chatRoomSetup(usersArray).then(result => {\n        console.log(\"chatroomSetup result\", result);\n        setChatRoom(result);\n      });\n    }\n    //\n  }, []);\n  console.log(\"usersArray\", usersArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chatRoom === null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" chat setup ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this), chatRoom !== undefined && chatRoom !== null && usersArray.length >= 2 && sender.id !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LiveChat, {\n        chatRoom: chatRoom,\n        sender: sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSetup, \"8dTc5/u3KSYGlZ6HF8CdZBjT6lc=\");\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useEffect","useState","Parse","chatRoomSetup","checkUsersArray","LiveChat","ChatSetup","props","sender","setSender","User","current","chatRoom","setChatRoom","usersArray","setUsersArray","chatUsers","console","log","length","selectedUsers","Object","set","save","getSelectedUsers","selectedUsersQuery","Query","descending","selectedUsersQueryResult","first","selectedUsersColumn","get","undefined","then","result","id"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatSetup/ChatSetup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./../../App.css\";\nimport Parse from \"parse\";\nimport { chatRoomSetup, checkUsersArray } from \"../../api/chat\";\n\n//COMPONENTS\nimport LiveChat from \"../LiveChat/LiveChat\";\n\nexport default function ChatSetup(props) {\n  const [sender, setSender] = useState(Parse.User.current());\n  const [chatRoom, setChatRoom] = useState(null);\n\n  const [usersArray, setUsersArray] = useState(props.chatUsers);\n  // const usersArray = props.chatUsers;\n  console.log(props.chatUsers);\n\n  useEffect(() => {\n    console.log(\"props chatusers\", props.chatUsers);\n\n    if (props.chatUsers.length >= 2) {\n      const selectedUsers = new Parse.Object(\"ChatUsers\");\n      selectedUsers.set(\"selectedUsers\", props.chatUsers);\n      selectedUsers.save();\n    }\n    async function getSelectedUsers() {\n      const selectedUsersQuery = new Parse.Query(\"ChatUsers\");\n      selectedUsersQuery.descending(\"createdAt\");\n      const selectedUsersQueryResult = await selectedUsersQuery.first();\n      const selectedUsersColumn = selectedUsersQueryResult.get(\"selectedUsers\");\n\n      setUsersArray(selectedUsersColumn);\n    }\n\n    getSelectedUsers();\n    setUsersArray();\n\n    checkUsersArray(usersArray);\n\n    //\n    if (chatRoom === null || chatRoom === undefined) {\n      chatRoomSetup(usersArray).then((result) => {\n        console.log(\"chatroomSetup result\", result);\n        setChatRoom(result);\n      });\n    }\n    //\n  }, []);\n\n  console.log(\"usersArray\", usersArray);\n\n  return (\n    <div>\n      {chatRoom === null && <h1> chat setup ...</h1>}\n\n      {chatRoom !== undefined &&\n        chatRoom !== null &&\n        usersArray.length >= 2 &&\n        sender.id !== undefined && (\n          <div>\n            <h1>Messages </h1>\n            <LiveChat chatRoom={chatRoom} sender={sender} />\n          </div>\n        )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,QAAQ,gBAAgB;;AAE/D;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAAC;AAE5C,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACC,KAAK,CAACQ,IAAI,CAACC,OAAO,EAAE,CAAC;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACM,KAAK,CAACS,SAAS,CAAC;EAC7D;EACAC,OAAO,CAACC,GAAG,CAACX,KAAK,CAACS,SAAS,CAAC;EAE5BhB,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEX,KAAK,CAACS,SAAS,CAAC;IAE/C,IAAIT,KAAK,CAACS,SAAS,CAACG,MAAM,IAAI,CAAC,EAAE;MAC/B,MAAMC,aAAa,GAAG,IAAIlB,KAAK,CAACmB,MAAM,CAAC,WAAW,CAAC;MACnDD,aAAa,CAACE,GAAG,CAAC,eAAe,EAAEf,KAAK,CAACS,SAAS,CAAC;MACnDI,aAAa,CAACG,IAAI,EAAE;IACtB;IACA,eAAeC,gBAAgB,GAAG;MAChC,MAAMC,kBAAkB,GAAG,IAAIvB,KAAK,CAACwB,KAAK,CAAC,WAAW,CAAC;MACvDD,kBAAkB,CAACE,UAAU,CAAC,WAAW,CAAC;MAC1C,MAAMC,wBAAwB,GAAG,MAAMH,kBAAkB,CAACI,KAAK,EAAE;MACjE,MAAMC,mBAAmB,GAAGF,wBAAwB,CAACG,GAAG,CAAC,eAAe,CAAC;MAEzEhB,aAAa,CAACe,mBAAmB,CAAC;IACpC;IAEAN,gBAAgB,EAAE;IAClBT,aAAa,EAAE;IAEfX,eAAe,CAACU,UAAU,CAAC;;IAE3B;IACA,IAAIF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKoB,SAAS,EAAE;MAC/C7B,aAAa,CAACW,UAAU,CAAC,CAACmB,IAAI,CAAEC,MAAM,IAAK;QACzCjB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEgB,MAAM,CAAC;QAC3CrB,WAAW,CAACqB,MAAM,CAAC;MACrB,CAAC,CAAC;IACJ;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAENjB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,UAAU,CAAC;EAErC,oBACE;IAAA,WACGF,QAAQ,KAAK,IAAI,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,EAE7CA,QAAQ,KAAKoB,SAAS,IACrBpB,QAAQ,KAAK,IAAI,IACjBE,UAAU,CAACK,MAAM,IAAI,CAAC,IACtBX,MAAM,CAAC2B,EAAE,KAAKH,SAAS,iBACrB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB,QAAC,QAAQ;QAAC,QAAQ,EAAEpB,QAAS;QAAC,MAAM,EAAEJ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEV;AAAC,GAzDuBF,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}