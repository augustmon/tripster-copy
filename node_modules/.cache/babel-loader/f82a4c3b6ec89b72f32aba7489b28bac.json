{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js\";\nimport React from \"react\";\nimport Parse from \"parse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList() {\n  let listNames = [];\n  async function queryUserArray() {\n    try {\n      const queryAllUsers = new Parse.Query(\"User\");\n      const result = await queryAllUsers.find();\n      console.log(result);\n      let names = [];\n      result.forEach(object => names.push(object.get(\"username\")));\n      console.log(\"User names array: \", names);\n      const listNames = names.map(name => name = \"<li>\" + name + \"</li>\");\n      console.log(\"NAMES with li\", names);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  queryUserArray();\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listNames\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Parse","ChatList","listNames","queryUserArray","queryAllUsers","Query","result","find","console","log","names","forEach","object","push","get","map","name","error"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js"],"sourcesContent":["import React from \"react\";\nimport Parse from \"parse\";\n\nexport default function ChatList() {\n  let listNames = [];\n  async function queryUserArray() {\n    try {\n      const queryAllUsers = new Parse.Query(\"User\");\n      const result = await queryAllUsers.find();\n      console.log(result);\n      let names = [];\n      result.forEach((object) => names.push(object.get(\"username\")));\n      console.log(\"User names array: \", names);\n      const listNames = names.map((name) => (name = \"<li>\" + name + \"</li>\"));\n      console.log(\"NAMES with li\", names);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  queryUserArray();\n\n  return <ul>{listNames}</ul>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,QAAQ,GAAG;EACjC,IAAIC,SAAS,GAAG,EAAE;EAClB,eAAeC,cAAc,GAAG;IAC9B,IAAI;MACF,MAAMC,aAAa,GAAG,IAAIJ,KAAK,CAACK,KAAK,CAAC,MAAM,CAAC;MAC7C,MAAMC,MAAM,GAAG,MAAMF,aAAa,CAACG,IAAI,EAAE;MACzCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnB,IAAII,KAAK,GAAG,EAAE;MACdJ,MAAM,CAACK,OAAO,CAAEC,MAAM,IAAKF,KAAK,CAACG,IAAI,CAACD,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;MAC9DN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,KAAK,CAAC;MACxC,MAAMR,SAAS,GAAGQ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAMA,IAAI,GAAG,MAAM,GAAGA,IAAI,GAAG,OAAQ,CAAC;MACvER,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,KAAK,CAAC;IACrC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB;EACF;EACAd,cAAc,EAAE;EAEhB,oBAAO;IAAA,UAAKD;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM;AAC7B;AAAC,KAnBuBD,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}