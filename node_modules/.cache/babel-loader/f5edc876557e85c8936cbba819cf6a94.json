{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/components/DisplayUsers/DisplayUsers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport UserLink from \"../UserLink/UserLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayUsers(props) {\n  _s();\n  const [localUsers, setLocalUsers] = useState([]);\n  const [display, setDisplay] = useState(null);\n  useEffect(() => {\n    // In Discover page:\n    if (props.displayMode === \"discover\") {\n      queryAllUsers().then(result => {\n        if (localUsers.length === 0) {\n          setLocalUsers(result);\n        } else {\n          console.log(\"localUsers is set\");\n        }\n      });\n    }\n    // In ActiveChats page:\n    else if (props.displayMode === \"active\") {\n      queryActiveChats().then(result => {\n        if (localUsers.length === 0) {\n          setLocalUsers(result);\n        } else {\n          console.log(\"active chats set\");\n        }\n      });\n    }\n  }, []);\n  async function queryActiveChats() {\n    try {\n      const currentUser = Parse.User.current();\n      console.log(\"querying chats with\", currentUser.get(\"username\"));\n      const queryChats = new Parse.Query(\"ChatRoom\");\n      queryChats.contains(\"users\", currentUser.id);\n      const allActiveChats = await queryChats.find();\n      if (allActiveChats.length === 0) {\n        return false;\n      }\n      return allActiveChats;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //// IMPORT THIS FROM API\n  async function queryAllUsers() {\n    try {\n      const currentUser = Parse.User.current();\n      const queryUsers = new Parse.Query(\"User\");\n      queryUsers.notEqualTo(\"objectId\", currentUser.id);\n      const allUserObjects = await queryUsers.find();\n      return allUserObjects;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ////\n\n  // const localUsersDisplay = [];\n  // console.log(\"Photo\", Parse.User.current().get(\"photo\").url());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [localUsers === false && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"body\",\n      children: \"You have no active chats. Find someone to chat with on the 'Discover' page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), localUsers && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: localUsers.map(user => /*#__PURE__*/_jsxDEV(UserLink, {\n        onClick: () => props.setSelectedUser(user),\n        to: \"/chatroom\",\n        username: user.get(\"username\"),\n        nationality: user.get(\"nationality\"),\n        status: user.get(\"status\"),\n        photo: user.get(\"photo\").url()\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayUsers, \"9nZ8G3TunNM8YPmvDSr92Q8lnT8=\");\n_c = DisplayUsers;\nvar _c;\n$RefreshReg$(_c, \"DisplayUsers\");","map":{"version":3,"names":["React","useState","useEffect","Parse","UserLink","DisplayUsers","props","localUsers","setLocalUsers","display","setDisplay","displayMode","queryAllUsers","then","result","length","console","log","queryActiveChats","currentUser","User","current","get","queryChats","Query","contains","id","allActiveChats","find","error","queryUsers","notEqualTo","allUserObjects","map","user","setSelectedUser","url"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/DisplayUsers/DisplayUsers.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport UserLink from \"../UserLink/UserLink\";\n\nexport default function DisplayUsers(props) {\n  const [localUsers, setLocalUsers] = useState([]);\n  const [display, setDisplay] = useState(null);\n\n  useEffect(() => {\n    // In Discover page:\n    if (props.displayMode === \"discover\") {\n      queryAllUsers().then((result) => {\n        if (localUsers.length === 0) {\n          setLocalUsers(result);\n        } else {\n          console.log(\"localUsers is set\");\n        }\n      });\n    }\n    // In ActiveChats page:\n    else if (props.displayMode === \"active\") {\n      queryActiveChats().then((result) => {\n        if (localUsers.length === 0) {\n          setLocalUsers(result);\n        } else {\n          console.log(\"active chats set\");\n        }\n      });\n    }\n  }, []);\n\n  async function queryActiveChats() {\n    try {\n      const currentUser = Parse.User.current();\n      console.log(\"querying chats with\", currentUser.get(\"username\"));\n      const queryChats = new Parse.Query(\"ChatRoom\");\n      queryChats.contains(\"users\", currentUser.id);\n      const allActiveChats = await queryChats.find();\n      if (allActiveChats.length === 0) {\n        return false;\n      }\n\n      return allActiveChats;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //// IMPORT THIS FROM API\n  async function queryAllUsers() {\n    try {\n      const currentUser = Parse.User.current();\n      const queryUsers = new Parse.Query(\"User\");\n      queryUsers.notEqualTo(\"objectId\", currentUser.id);\n      const allUserObjects = await queryUsers.find();\n\n      return allUserObjects;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ////\n\n  // const localUsersDisplay = [];\n  // console.log(\"Photo\", Parse.User.current().get(\"photo\").url());\n\n  return (\n    <div>\n      {localUsers === false && (\n        <h3 className=\"body\">\n          You have no active chats. Find someone to chat with on the 'Discover'\n          page.\n        </h3>\n      )}\n\n      {localUsers && (\n        <ul>\n          {localUsers.map((user) => (\n            <UserLink\n              key={user.id}\n              onClick={() => props.setSelectedUser(user)}\n              to=\"/chatroom\"\n              username={user.get(\"username\")}\n              nationality={user.get(\"nationality\")}\n              status={user.get(\"status\")}\n              photo={user.get(\"photo\").url()}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}