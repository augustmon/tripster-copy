{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\nimport LiveChat from \"./LiveChat\";\nimport { initializeParse } from \"@parse/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitializeParse();\nParse.initialize(\"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\", \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\nParse.serverURL = \"https://parseapi.back4app.com/\";\n// Parse.serverURL = \"tripster.b4a.io\";\n\nexport default function ChatSetup() {\n  _s();\n  const [senderUserName, setSenderUserName] = useState(\"aaa\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserName, setReceiverUserName] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n  async function startLiveChat() {\n    console.log(\"Starting live chat\");\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"username\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (senderParseQueryResult !== undefined && senderParseQueryResult !== null) {\n        console.log(senderParseQueryResult);\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(error);\n      return false;\n    }\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(\"username\", receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (receiverParseQueryResult !== undefined && receiverParseQueryResult !== null) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CHAT SETUP PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), senderUserId === null && receiverUserId === null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startLiveChat,\n      children: \"Start Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), senderUserId !== null && receiverUserId !== null && /*#__PURE__*/_jsxDEV(LiveChat, {\n      senderUserName: senderUserName,\n      senderUserId: senderUserId,\n      receiverUserName: receiverUserName,\n      receiverUserId: receiverUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSetup, \"Fa92lkfE1dgIKMSjJipCBbRpGI8=\");\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useState","Parse","LiveChat","initializeParse","initialize","serverURL","ChatSetup","senderUserName","setSenderUserName","senderUserId","setSenderUserId","receiverUserName","setReceiverUserName","receiverUserId","setReceiverUserId","startLiveChat","console","log","alert","senderUserObject","senderParseQuery","Query","equalTo","senderParseQueryResult","first","undefined","error","receiverUserObject","receiverParseQuery","receiverParseQueryResult","id"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\nimport LiveChat from \"./LiveChat\";\nimport { initializeParse } from \"@parse/react\";\n\ninitializeParse();\n\nParse.initialize(\n  \"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\",\n  \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\"\n); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\nParse.serverURL = \"https://parseapi.back4app.com/\";\n// Parse.serverURL = \"tripster.b4a.io\";\n\nexport default function ChatSetup() {\n  const [senderUserName, setSenderUserName] = useState(\"aaa\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserName, setReceiverUserName] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n\n  async function startLiveChat() {\n    console.log(\"Starting live chat\");\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"username\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (\n        senderParseQueryResult !== undefined &&\n        senderParseQueryResult !== null\n      ) {\n        console.log(senderParseQueryResult);\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(error);\n      return false;\n    }\n\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(\"username\", receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (\n        receiverParseQueryResult !== undefined &&\n        receiverParseQueryResult !== null\n      ) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n\n    return true;\n  }\n\n  return (\n    <div>\n      <h1> CHAT SETUP PAGE</h1>\n      {senderUserId === null && receiverUserId === null && (\n        <button onClick={startLiveChat}>Start Live Chat</button>\n      )}\n      {senderUserId !== null && receiverUserId !== null && (\n        <LiveChat\n          senderUserName={senderUserName}\n          senderUserId={senderUserId}\n          receiverUserName={receiverUserName}\n          receiverUserId={receiverUserId}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}