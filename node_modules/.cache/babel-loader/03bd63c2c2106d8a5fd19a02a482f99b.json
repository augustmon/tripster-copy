{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList() {\n  _s();\n  const [localUsers, setLocalUsers] = useState([]);\n  useEffect(() => {\n    queryAllUsers().then(result => setLocalUsers(result));\n  }, []);\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const allUserObjects = await queryUsers.find();\n      const result = await allUserObjects.map(userobject => userobject = userobject.get(\"username\"));\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  console.log(\"localUsers: \", localUsers);\n  const listNames = localUsers.map(name => name = /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\" \", name, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 54\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listNames\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(ChatList, \"BXUBg2zH5U+XU3T8EgmXS6Qp75E=\");\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","useState","useEffect","Parse","ChatList","localUsers","setLocalUsers","queryAllUsers","then","result","queryUsers","Query","allUserObjects","find","map","userobject","get","error","console","log","listNames","name"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\n\nexport default function ChatList() {\n  const [localUsers, setLocalUsers] = useState([]);\n  useEffect(() => {\n    queryAllUsers().then((result) => setLocalUsers(result));\n  }, []);\n\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const allUserObjects = await queryUsers.find();\n      const result = await allUserObjects.map(\n        (userobject) => (userobject = userobject.get(\"username\"))\n      );\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  console.log(\"localUsers: \", localUsers);\n\n  const listNames = localUsers.map((name) => (name = <li> {name} </li>));\n\n  return <ul>{listNames}</ul>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChDC,SAAS,CAAC,MAAM;IACdK,aAAa,EAAE,CAACC,IAAI,CAAEC,MAAM,IAAKH,aAAa,CAACG,MAAM,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeF,aAAa,GAAG;IAC7B,IAAI;MACF,MAAMG,UAAU,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,MAAM,CAAC;MAC1C,MAAMC,cAAc,GAAG,MAAMF,UAAU,CAACG,IAAI,EAAE;MAC9C,MAAMJ,MAAM,GAAG,MAAMG,cAAc,CAACE,GAAG,CACpCC,UAAU,IAAMA,UAAU,GAAGA,UAAU,CAACC,GAAG,CAAC,UAAU,CAAE,CAC1D;MACD,OAAOP,MAAM;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEd,UAAU,CAAC;EAEvC,MAAMe,SAAS,GAAGf,UAAU,CAACS,GAAG,CAAEO,IAAI,IAAMA,IAAI,gBAAG;IAAA,gBAAMA,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAQ,CAAC;EAEtE,oBAAO;IAAA,UAAKD;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM;AAC7B;AAAC,GAxBuBhB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}