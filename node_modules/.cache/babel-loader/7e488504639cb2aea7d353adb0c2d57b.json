{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n\n//COMPONENTS\nimport LiveChat from \"./LiveChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatSetup(props) {\n  _s();\n  const [chatRoom, setChatRoom] = useState(null);\n  async function startLiveChat() {\n    const usersArray = [Parse.User.current(), props.selectedUser];\n    console.log(\"users array\", usersArray);\n    console.log(\"Starting live chat\");\n\n    // check if both UserName variables hold any values\n    if (Parse.User.current() === null || props.selectedUser === null || Parse.User.current() === undefined || props.selectedUser === undefined) {\n      alert(\"Please inform both sender and receiver!\");\n      return false;\n    }\n    async function getChatRoomObject() {\n      let chatRoomObject = null;\n      try {\n        const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n        chatRoomParseQuery.containsAll(\"users\", usersArray); // existing chatroom id: \"XpdGCZsn2E\" ?\n        const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n        if (chatRoomParseQueryResult !== undefined && chatRoomParseQueryResult !== null) {\n          console.log(\"Chat Room ID:\", chatRoomParseQueryResult.id);\n          chatRoomObject = chatRoomParseQueryResult;\n        } else {\n          alert(\"CREATING NEW CHAT ROOM\");\n          chatRoomObject = new Parse.Object(\"ChatRoom\");\n          chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n          chatRoomObject.save();\n        }\n      } catch (error) {\n        console.log(\"ChatRoom Error\", error);\n        return false;\n      }\n      setChatRoom(chatRoomObject);\n    }\n    if (chatRoom === null || chatRoom === undefined) {\n      getChatRoomObject();\n    }\n\n    // set user object ids, so live chat component is instantiated\n    console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n    return true;\n  }\n  if (chatRoom === null || chatRoom === undefined) {\n    startLiveChat();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chatRoom === undefined || chatRoom === null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" chat setup ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }, this), chatRoom !== undefined && chatRoom !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveChat, {\n        chatRoom: chatRoom,\n        selectedUser: props.selectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSetup, \"qHKtTi+e88POLsyU5UoFIRS8Dbo=\");\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useState","Parse","LiveChat","ChatSetup","props","chatRoom","setChatRoom","startLiveChat","usersArray","User","current","selectedUser","console","log","undefined","alert","getChatRoomObject","chatRoomObject","chatRoomParseQuery","Query","containsAll","chatRoomParseQueryResult","first","id","Object","set","save","error","get"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n\n//COMPONENTS\nimport LiveChat from \"./LiveChat\";\n\nexport default function ChatSetup(props) {\n  const [chatRoom, setChatRoom] = useState(null);\n\n  async function startLiveChat() {\n    const usersArray = [Parse.User.current(), props.selectedUser];\n    console.log(\"users array\", usersArray);\n    console.log(\"Starting live chat\");\n\n    // check if both UserName variables hold any values\n    if (\n      Parse.User.current() === null ||\n      props.selectedUser === null ||\n      Parse.User.current() === undefined ||\n      props.selectedUser === undefined\n    ) {\n      alert(\"Please inform both sender and receiver!\");\n      return false;\n    }\n    async function getChatRoomObject() {\n      let chatRoomObject = null;\n      try {\n        const chatRoomParseQuery = new Parse.Query(\"ChatRoom\");\n        chatRoomParseQuery.containsAll(\"users\", usersArray); // existing chatroom id: \"XpdGCZsn2E\" ?\n        const chatRoomParseQueryResult = await chatRoomParseQuery.first();\n        if (\n          chatRoomParseQueryResult !== undefined &&\n          chatRoomParseQueryResult !== null\n        ) {\n          console.log(\"Chat Room ID:\", chatRoomParseQueryResult.id);\n          chatRoomObject = chatRoomParseQueryResult;\n        } else {\n          alert(\"CREATING NEW CHAT ROOM\");\n          chatRoomObject = new Parse.Object(\"ChatRoom\");\n          chatRoomObject.set(\"users\", usersArray); // POINTER OBJECTS HERE!\n          chatRoomObject.save();\n        }\n      } catch (error) {\n        console.log(\"ChatRoom Error\", error);\n        return false;\n      }\n      setChatRoom(chatRoomObject);\n    }\n\n    if (chatRoom === null || chatRoom === undefined) {\n      getChatRoomObject();\n    }\n\n    // set user object ids, so live chat component is instantiated\n    console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n\n    return true;\n  }\n\n  if (chatRoom === null || chatRoom === undefined) {\n    startLiveChat();\n  }\n\n  return (\n    <div>\n      {chatRoom === undefined ||\n        (chatRoom === null && <h1> chat setup ...</h1>)}\n\n      {chatRoom !== undefined && chatRoom !== null && (\n        <div>\n          <h1>Messages </h1>\n          <LiveChat chatRoom={chatRoom} selectedUser={props.selectedUser} />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}