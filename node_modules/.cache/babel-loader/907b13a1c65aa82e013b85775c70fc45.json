{"ast":null,"code":"import React from \"react\";\nimport Parse from \"parse\";\nexport default function ChatList() {\n  function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers().then(result => result.map(userobject => userobject = userobject.get(\"username\")).then(object => {\n    return object;\n  }));\n  const fulfill = userPromise.then(result => result);\n  console.log(\"userPromise\", userPromise, fulfill);\n\n  //   const userArray = userPromise.value;\n  //   console.log(\"User array: \", userArray);\n  //   console.log(\"NAMES with li\", listNames);\n  //   let names = [];\n  //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   console.log(\"User names array: \", names);\n  //   listNames = names.map((name) => (name = \"<li>\" + name + \"</li>\"));\n  //   console.log(\"NAMES with li\", listNames);\n\n  //   return <ul>{listNames}</ul>;\n}\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Parse","ChatList","queryAllUsers","queryUsers","Query","result","find","error","console","log","userPromise","then","map","userobject","get","object","fulfill"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js"],"sourcesContent":["import React from \"react\";\nimport Parse from \"parse\";\n\nexport default function ChatList() {\n  function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers().then((result) =>\n    result\n      .map((userobject) => (userobject = userobject.get(\"username\")))\n      .then((object) => {\n        return object;\n      })\n  );\n\n  const fulfill = userPromise.then((result) => result);\n\n  console.log(\"userPromise\", userPromise, fulfill);\n\n  //   const userArray = userPromise.value;\n  //   console.log(\"User array: \", userArray);\n  //   console.log(\"NAMES with li\", listNames);\n  //   let names = [];\n  //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   console.log(\"User names array: \", names);\n  //   listNames = names.map((name) => (name = \"<li>\" + name + \"</li>\"));\n  //   console.log(\"NAMES with li\", listNames);\n\n  //   return <ul>{listNames}</ul>;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,QAAQ,GAAG;EACjC,SAASC,aAAa,GAAG;IACvB,IAAI;MACF,MAAMC,UAAU,GAAG,IAAIH,KAAK,CAACI,KAAK,CAAC,MAAM,CAAC;MAC1C,MAAMC,MAAM,GAAGF,UAAU,CAACG,IAAI,EAAE;MAChC,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EACA,MAAMG,WAAW,GAAGR,aAAa,EAAE,CAACS,IAAI,CAAEN,MAAM,IAC9CA,MAAM,CACHO,GAAG,CAAEC,UAAU,IAAMA,UAAU,GAAGA,UAAU,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC,CAC9DH,IAAI,CAAEI,MAAM,IAAK;IAChB,OAAOA,MAAM;EACf,CAAC,CAAC,CACL;EAED,MAAMC,OAAO,GAAGN,WAAW,CAACC,IAAI,CAAEN,MAAM,IAAKA,MAAM,CAAC;EAEpDG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,WAAW,EAAEM,OAAO,CAAC;;EAEhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACF;AAAC,KAhCuBf,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}