{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n// import { LiveChat } from \"./LiveChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatSetup() {\n  _s();\n  const [senderUserNameInput, setSenderUserNameInput] = useState(\"aaa\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserNameInput, setReceiverUserNameInput] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n  async function startLiveChat() {\n    const senderUserName = senderUserNameInput;\n    const receiverUserName = receiverUserNameInput;\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"key\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (senderParseQueryResult !== undefined && senderParseQueryResult !== null) {\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (receiverParseQueryResult !== undefined && receiverParseQueryResult !== null) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n    return true;\n  }\n  startLiveChat();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CHAT SETUP PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), senderUserId === null && receiverUserId === null && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startLiveChat,\n      children: \"Start Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), senderUserId !== null && receiverUserId !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: senderUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: senderUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: receiverUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: receiverUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSetup, \"7TrzBaAXTHE5s5eRk1miHIGDHeY=\");\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useState","Parse","ChatSetup","senderUserNameInput","setSenderUserNameInput","senderUserId","setSenderUserId","receiverUserNameInput","setReceiverUserNameInput","receiverUserId","setReceiverUserId","startLiveChat","senderUserName","receiverUserName","alert","senderUserObject","senderParseQuery","Query","equalTo","senderParseQueryResult","first","undefined","error","receiverUserObject","receiverParseQuery","receiverParseQueryResult","id"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n// import { LiveChat } from \"./LiveChat\";\n\nexport default function ChatSetup() {\n  const [senderUserNameInput, setSenderUserNameInput] = useState(\"aaa\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserNameInput, setReceiverUserNameInput] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n\n  async function startLiveChat() {\n    const senderUserName = senderUserNameInput;\n    const receiverUserName = receiverUserNameInput;\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"key\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (\n        senderParseQueryResult !== undefined &&\n        senderParseQueryResult !== null\n      ) {\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (\n        receiverParseQueryResult !== undefined &&\n        receiverParseQueryResult !== null\n      ) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n    return true;\n  }\n\n  startLiveChat();\n\n  return (\n    <div>\n      <h1> CHAT SETUP PAGE</h1>\n      {senderUserId === null && receiverUserId === null && (\n        <button onClick={startLiveChat}>Start Live Chat</button>\n      )}\n      {senderUserId !== null && receiverUserId !== null && (\n        <div>\n          {\" \"}\n          <h3>{senderUserId}</h3>\n          <h4>{senderUserName}</h4>\n          <h3>{receiverUserId}</h3>\n          <h4>{receiverUserName}</h4>{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}