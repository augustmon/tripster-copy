{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\nimport { initializeParse } from \"@parse/react\";\nimport LiveChat from \"./LiveChat\";\nimport ChatList from \"../components/ChatList/ChatList\";\n\n// Note the live query URL instead of the regular server url\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PARSE_APPLICATION_ID = \"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\";\n// const PARSE_SERVER_URL = \"https://parseapi.back4app.com/\";\nconst PARSE_LIVE_QUERY_URL = \"https://tripster.b4a.io/\";\nconst PARSE_JAVASCRIPT_KEY = \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\";\n\n// Initialize parse using @parse/react instead of regular parse JS SDK\ninitializeParse(PARSE_LIVE_QUERY_URL, PARSE_APPLICATION_ID, PARSE_JAVASCRIPT_KEY);\n\n// Parse.initialize(\n//   \"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\",\n//   \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\"\n// ); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\n// Parse.serverURL = \"https://parseapi.back4app.com/\";\n// // Parse.serverURL = \"tripster.b4a.io\";\n\nexport default function ChatSetup() {\n  _s();\n  const [senderUserName, setSenderUserName] = useState(\"\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserName, setReceiverUserName] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n  const currentUser = Parse.User.current();\n  const currentUserName = currentUser.get(\"username\");\n  useEffect(() => {\n    setSenderUserName(currentUserName);\n  }, []);\n  console.log(\"Sender name:\", senderUserName);\n  // console.log(\"Current user name: \", currentUserName);\n\n  async function startLiveChat() {\n    console.log(\"Starting live chat\");\n    // setSenderUserName(currentUserName);\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"username\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (senderParseQueryResult !== undefined && senderParseQueryResult !== null) {\n        console.log(senderParseQueryResult);\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(error);\n      return false;\n    }\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(\"username\", receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (receiverParseQueryResult !== undefined && receiverParseQueryResult !== null) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" CHAT SETUP PAGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), senderUserId === null && receiverUserId === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startLiveChat,\n        children: \"Start Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), senderUserId !== null && receiverUserId !== null && /*#__PURE__*/_jsxDEV(LiveChat, {\n      senderUserName: senderUserName,\n      senderUserId: senderUserId,\n      receiverUserName: receiverUserName,\n      receiverUserId: receiverUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatSetup, \"iIfylHouy/5/V8yHJrxve32XVgE=\");\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useEffect","useState","Parse","initializeParse","LiveChat","ChatList","PARSE_APPLICATION_ID","PARSE_LIVE_QUERY_URL","PARSE_JAVASCRIPT_KEY","ChatSetup","senderUserName","setSenderUserName","senderUserId","setSenderUserId","receiverUserName","setReceiverUserName","receiverUserId","setReceiverUserId","currentUser","User","current","currentUserName","get","console","log","startLiveChat","alert","senderUserObject","senderParseQuery","Query","equalTo","senderParseQueryResult","first","undefined","error","receiverUserObject","receiverParseQuery","receiverParseQueryResult","id"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\nimport { initializeParse } from \"@parse/react\";\nimport LiveChat from \"./LiveChat\";\n\nimport ChatList from \"../components/ChatList/ChatList\";\n\n// Note the live query URL instead of the regular server url\nconst PARSE_APPLICATION_ID = \"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\";\n// const PARSE_SERVER_URL = \"https://parseapi.back4app.com/\";\nconst PARSE_LIVE_QUERY_URL = \"https://tripster.b4a.io/\";\nconst PARSE_JAVASCRIPT_KEY = \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\";\n\n// Initialize parse using @parse/react instead of regular parse JS SDK\ninitializeParse(\n  PARSE_LIVE_QUERY_URL,\n  PARSE_APPLICATION_ID,\n  PARSE_JAVASCRIPT_KEY\n);\n\n// Parse.initialize(\n//   \"XCuriaWlKUTt14yvNJVJ77kjQyC8yKFIOFqiVFck\",\n//   \"JxCHF3R5JB8VH3r8UXI9LCCEI14N3IdNIvrRhgIL\"\n// ); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\n// Parse.serverURL = \"https://parseapi.back4app.com/\";\n// // Parse.serverURL = \"tripster.b4a.io\";\n\nexport default function ChatSetup() {\n  const [senderUserName, setSenderUserName] = useState(\"\");\n  const [senderUserId, setSenderUserId] = useState(null);\n  const [receiverUserName, setReceiverUserName] = useState(\"bbb\");\n  const [receiverUserId, setReceiverUserId] = useState(null);\n\n  const currentUser = Parse.User.current();\n  const currentUserName = currentUser.get(\"username\");\n\n  useEffect(() => {\n    setSenderUserName(currentUserName);\n  }, []);\n  console.log(\"Sender name:\", senderUserName);\n  // console.log(\"Current user name: \", currentUserName);\n\n  async function startLiveChat() {\n    console.log(\"Starting live chat\");\n    // setSenderUserName(currentUserName);\n\n    // check if both *UserName variables hold any values\n    if (senderUserName === null || receiverUserName === null) {\n      alert(\"Please inform both sender and receiver user names!\");\n      return false;\n    }\n\n    let senderUserObject = null;\n    try {\n      const senderParseQuery = new Parse.Query(\"User\");\n      senderParseQuery.equalTo(\"username\", senderUserName);\n      const senderParseQueryResult = await senderParseQuery.first();\n      if (\n        senderParseQueryResult !== undefined &&\n        senderParseQueryResult !== null\n      ) {\n        console.log(senderParseQueryResult);\n        senderUserObject = senderParseQueryResult;\n      } else {\n        alert(\"Sender does not exist!\");\n      }\n    } catch (error) {\n      alert(error);\n      return false;\n    }\n\n    let receiverUserObject = null;\n    try {\n      const receiverParseQuery = new Parse.Query(\"User\");\n      receiverParseQuery.equalTo(\"username\", receiverUserName);\n      const receiverParseQueryResult = await receiverParseQuery.first();\n      if (\n        receiverParseQueryResult !== undefined &&\n        receiverParseQueryResult !== null\n      ) {\n        receiverUserObject = receiverParseQueryResult;\n      } else {\n        alert(\"Receiver does not exist!\");\n      }\n    } catch (error) {\n      alert(\"Caught this error: \", error);\n      return false;\n    }\n\n    // set user object ids, so live chat component is instantiated\n    setSenderUserId(senderUserObject.id);\n    setReceiverUserId(receiverUserObject.id);\n\n    return true;\n  }\n\n  return (\n    <div>\n      <h1> CHAT SETUP PAGE</h1>\n      {senderUserId === null && receiverUserId === null && (\n        <div>\n          <button onClick={startLiveChat}>Start Live Chat</button>\n          <ChatList />\n        </div>\n      )}\n      {senderUserId !== null && receiverUserId !== null && (\n        <LiveChat\n          senderUserName={senderUserName}\n          senderUserId={senderUserId}\n          receiverUserName={receiverUserName}\n          receiverUserId={receiverUserId}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,cAAc;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,iCAAiC;;AAEtD;AAAA;AACA,MAAMC,oBAAoB,GAAG,0CAA0C;AACvE;AACA,MAAMC,oBAAoB,GAAG,0BAA0B;AACvD,MAAMC,oBAAoB,GAAG,0CAA0C;;AAEvE;AACAL,eAAe,CACbI,oBAAoB,EACpBD,oBAAoB,EACpBE,oBAAoB,CACrB;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMiB,WAAW,GAAGhB,KAAK,CAACiB,IAAI,CAACC,OAAO,EAAE;EACxC,MAAMC,eAAe,GAAGH,WAAW,CAACI,GAAG,CAAC,UAAU,CAAC;EAEnDtB,SAAS,CAAC,MAAM;IACdW,iBAAiB,CAACU,eAAe,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EACNE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEd,cAAc,CAAC;EAC3C;;EAEA,eAAee,aAAa,GAAG;IAC7BF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC;;IAEA;IACA,IAAId,cAAc,KAAK,IAAI,IAAII,gBAAgB,KAAK,IAAI,EAAE;MACxDY,KAAK,CAAC,oDAAoD,CAAC;MAC3D,OAAO,KAAK;IACd;IAEA,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAI;MACF,MAAMC,gBAAgB,GAAG,IAAI1B,KAAK,CAAC2B,KAAK,CAAC,MAAM,CAAC;MAChDD,gBAAgB,CAACE,OAAO,CAAC,UAAU,EAAEpB,cAAc,CAAC;MACpD,MAAMqB,sBAAsB,GAAG,MAAMH,gBAAgB,CAACI,KAAK,EAAE;MAC7D,IACED,sBAAsB,KAAKE,SAAS,IACpCF,sBAAsB,KAAK,IAAI,EAC/B;QACAR,OAAO,CAACC,GAAG,CAACO,sBAAsB,CAAC;QACnCJ,gBAAgB,GAAGI,sBAAsB;MAC3C,CAAC,MAAM;QACLL,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdR,KAAK,CAACQ,KAAK,CAAC;MACZ,OAAO,KAAK;IACd;IAEA,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,kBAAkB,GAAG,IAAIlC,KAAK,CAAC2B,KAAK,CAAC,MAAM,CAAC;MAClDO,kBAAkB,CAACN,OAAO,CAAC,UAAU,EAAEhB,gBAAgB,CAAC;MACxD,MAAMuB,wBAAwB,GAAG,MAAMD,kBAAkB,CAACJ,KAAK,EAAE;MACjE,IACEK,wBAAwB,KAAKJ,SAAS,IACtCI,wBAAwB,KAAK,IAAI,EACjC;QACAF,kBAAkB,GAAGE,wBAAwB;MAC/C,CAAC,MAAM;QACLX,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdR,KAAK,CAAC,qBAAqB,EAAEQ,KAAK,CAAC;MACnC,OAAO,KAAK;IACd;;IAEA;IACArB,eAAe,CAACc,gBAAgB,CAACW,EAAE,CAAC;IACpCrB,iBAAiB,CAACkB,kBAAkB,CAACG,EAAE,CAAC;IAExC,OAAO,IAAI;EACb;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,EACxB1B,YAAY,KAAK,IAAI,IAAII,cAAc,KAAK,IAAI,iBAC/C;MAAA,wBACE;QAAQ,OAAO,EAAES,aAAc;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB,eACxD,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf,EACAb,YAAY,KAAK,IAAI,IAAII,cAAc,KAAK,IAAI,iBAC/C,QAAC,QAAQ;MACP,cAAc,EAAEN,cAAe;MAC/B,YAAY,EAAEE,YAAa;MAC3B,gBAAgB,EAAEE,gBAAiB;MACnC,cAAc,EAAEE;IAAe;MAAA;MAAA;MAAA;IAAA,QAElC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAxFuBP,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}