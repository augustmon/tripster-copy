{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js\";\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n\n//COMPONENTS\nimport LiveChat from \"./LiveChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatSetup(props) {\n  async function startLiveChat() {\n    const usersArray = [Parse.User.current(), props.selectedUser];\n    console.log(\"users array\", usersArray);\n    console.log(\"Starting live chat\");\n\n    // check if both UserName variables hold any values\n    if (Parse.User.current() === null || props.selectedUser === null || Parse.User.current() === undefined || props.selectedUser === undefined) {\n      alert(\"Please inform both sender and receiver!\");\n      return false;\n    }\n    if (chatRoom === null || chatRoom === undefined) {\n      chatRoomSetup();\n    }\n\n    // set user object ids, so live chat component is instantiated\n    console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n    return true;\n  }\n  if (chatRoom === null || chatRoom === undefined) {\n    startLiveChat();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chatRoom === undefined || chatRoom === null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" chat setup ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }, this), chatRoom !== undefined && chatRoom !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LiveChat, {\n        chatRoom: chatRoom,\n        selectedUser: props.selectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatSetup;\nvar _c;\n$RefreshReg$(_c, \"ChatSetup\");","map":{"version":3,"names":["React","useState","Parse","LiveChat","ChatSetup","props","startLiveChat","usersArray","User","current","selectedUser","console","log","undefined","alert","chatRoom","chatRoomSetup","get"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/api/ChatSetup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport Parse from \"parse\";\n\n//COMPONENTS\nimport LiveChat from \"./LiveChat\";\n\nexport default function ChatSetup(props) {\n  async function startLiveChat() {\n    const usersArray = [Parse.User.current(), props.selectedUser];\n    console.log(\"users array\", usersArray);\n    console.log(\"Starting live chat\");\n\n    // check if both UserName variables hold any values\n    if (\n      Parse.User.current() === null ||\n      props.selectedUser === null ||\n      Parse.User.current() === undefined ||\n      props.selectedUser === undefined\n    ) {\n      alert(\"Please inform both sender and receiver!\");\n      return false;\n    }\n\n    if (chatRoom === null || chatRoom === undefined) {\n      chatRoomSetup();\n    }\n\n    // set user object ids, so live chat component is instantiated\n    console.log(\"RECEIVER USER NAME: \", props.selectedUser.get(\"username\"));\n\n    return true;\n  }\n\n  if (chatRoom === null || chatRoom === undefined) {\n    startLiveChat();\n  }\n\n  return (\n    <div>\n      {chatRoom === undefined ||\n        (chatRoom === null && <h1> chat setup ...</h1>)}\n\n      {chatRoom !== undefined && chatRoom !== null && (\n        <div>\n          <h1>Messages </h1>\n          <LiveChat chatRoom={chatRoom} selectedUser={props.selectedUser} />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EACvC,eAAeC,aAAa,GAAG;IAC7B,MAAMC,UAAU,GAAG,CAACL,KAAK,CAACM,IAAI,CAACC,OAAO,EAAE,EAAEJ,KAAK,CAACK,YAAY,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,UAAU,CAAC;IACtCI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;IAEjC;IACA,IACEV,KAAK,CAACM,IAAI,CAACC,OAAO,EAAE,KAAK,IAAI,IAC7BJ,KAAK,CAACK,YAAY,KAAK,IAAI,IAC3BR,KAAK,CAACM,IAAI,CAACC,OAAO,EAAE,KAAKI,SAAS,IAClCR,KAAK,CAACK,YAAY,KAAKG,SAAS,EAChC;MACAC,KAAK,CAAC,yCAAyC,CAAC;MAChD,OAAO,KAAK;IACd;IAEA,IAAIC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKF,SAAS,EAAE;MAC/CG,aAAa,EAAE;IACjB;;IAEA;IACAL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEP,KAAK,CAACK,YAAY,CAACO,GAAG,CAAC,UAAU,CAAC,CAAC;IAEvE,OAAO,IAAI;EACb;EAEA,IAAIF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKF,SAAS,EAAE;IAC/CP,aAAa,EAAE;EACjB;EAEA,oBACE;IAAA,WACGS,QAAQ,KAAKF,SAAS,IACpBE,QAAQ,KAAK,IAAI,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,EAEhDA,QAAQ,KAAKF,SAAS,IAAIE,QAAQ,KAAK,IAAI,iBAC1C;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB,QAAC,QAAQ;QAAC,QAAQ,EAAEA,QAAS;QAAC,YAAY,EAAEV,KAAK,CAACK;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAErE;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,KA5CuBN,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}