{"ast":null,"code":"var _jsxFileName = \"/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js\";\nimport React from \"react\";\nimport Parse from \"parse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatList() {\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = await queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers().then(array => array.map(userobject => userobject = userobject.get(\"username\")));\n  console.log(\"userPromise\", userPromise);\n  const userArray = userPromise.value;\n  console.log(\"User array: \", userArray);\n  //   console.log(\"NAMES with li\", listNames);\n  //   let names = [];\n  //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   console.log(\"User names array: \", names);\n  listNames = names.map(name => name = \"<li>\" + name + \"</li>\");\n  //   console.log(\"NAMES with li\", listNames);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listNames\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Parse","ChatList","queryAllUsers","queryUsers","Query","result","find","error","console","log","userPromise","then","array","map","userobject","get","userArray","value","listNames","names","name"],"sources":["/Users/august/Documents/ITU/TID/exam/tripster/src/components/ChatList/ChatList.js"],"sourcesContent":["import React from \"react\";\nimport Parse from \"parse\";\n\nexport default function ChatList() {\n  async function queryAllUsers() {\n    try {\n      const queryUsers = new Parse.Query(\"User\");\n      const result = await queryUsers.find();\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const userPromise = queryAllUsers().then((array) =>\n    array.map((userobject) => (userobject = userobject.get(\"username\")))\n  );\n  console.log(\"userPromise\", userPromise);\n\n  const userArray = userPromise.value;\n  console.log(\"User array: \", userArray);\n  //   console.log(\"NAMES with li\", listNames);\n  //   let names = [];\n  //   result.forEach((object) => names.push(object.get(\"username\")));\n  //   console.log(\"User names array: \", names);\n  listNames = names.map((name) => (name = \"<li>\" + name + \"</li>\"));\n  //   console.log(\"NAMES with li\", listNames);\n\n  return <ul>{listNames}</ul>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,QAAQ,GAAG;EACjC,eAAeC,aAAa,GAAG;IAC7B,IAAI;MACF,MAAMC,UAAU,GAAG,IAAIH,KAAK,CAACI,KAAK,CAAC,MAAM,CAAC;MAC1C,MAAMC,MAAM,GAAG,MAAMF,UAAU,CAACG,IAAI,EAAE;MACtC,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EACA,MAAMG,WAAW,GAAGR,aAAa,EAAE,CAACS,IAAI,CAAEC,KAAK,IAC7CA,KAAK,CAACC,GAAG,CAAEC,UAAU,IAAMA,UAAU,GAAGA,UAAU,CAACC,GAAG,CAAC,UAAU,CAAE,CAAC,CACrE;EACDP,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,WAAW,CAAC;EAEvC,MAAMM,SAAS,GAAGN,WAAW,CAACO,KAAK;EACnCT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEO,SAAS,CAAC;EACtC;EACA;EACA;EACA;EACAE,SAAS,GAAGC,KAAK,CAACN,GAAG,CAAEO,IAAI,IAAMA,IAAI,GAAG,MAAM,GAAGA,IAAI,GAAG,OAAQ,CAAC;EACjE;;EAEA,oBAAO;IAAA,UAAKF;EAAS;IAAA;IAAA;IAAA;EAAA,QAAM;AAC7B;AAAC,KAzBuBjB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}